"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/generate";
exports.ids = ["pages/api/generate"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "cheerio":
/*!**************************!*\
  !*** external "cheerio" ***!
  \**************************/
/***/ ((module) => {

module.exports = import("cheerio");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate.ts&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate.ts&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/generate.ts */ \"(api)/./pages/api/generate.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_generate_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_generate_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_generate_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/generate\",\n        pathname: \"/api/generate\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_generate_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmdlbmVyYXRlJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZnZW5lcmF0ZS50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNvRDtBQUNwRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsbURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG1EQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VkbS1idWlsZGVyLz9iZjExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvZ2VuZXJhdGUudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9nZW5lcmF0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dlbmVyYXRlXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./data/templates.ts":
/*!***************************!*\
  !*** ./data/templates.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultTemplates: () => (/* binding */ defaultTemplates),\n/* harmony export */   renderTemplate: () => (/* binding */ renderTemplate)\n/* harmony export */ });\n/**\n * Module containing default HTML email templates and helper\n * functions for simple variable substitution. Templates are defined\n * with double curly braces, e.g. `{{title}}`, which will be\n * replaced with values from a ProductData object. Template\n * designers can add or remove placeholders as needed.\n */ /**\n * Default templates included with the application. New templates\n * added via the UI can be appended at runtime (stored in\n * localStorage on the client). When adding a new template be sure to\n * assign a unique id.\n */ const defaultTemplates = [\n    {\n        id: \"product-image-left-copy-right\",\n        name: \"Image left / Copy right\",\n        // Updated HTML for the left-image / copy-right module. This version\n        // matches the design provided in the archive: a light grey\n        // background with a white card, no pretitle, a price block that\n        // supports an original (compare-at) price via the {{priceHtml}}\n        // placeholder, and right-aligned colour swatches. The CTA uses\n        // the accent colour defined in globals.css.\n        html: `<!-- === Start: Product Feature Module (Image Left / Copy Right) === -->\n<table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" align=\"center\" style=\"margin:0;padding:0;\">\n  <tr>\n    <td align=\"center\" style=\"margin:0;padding:0;\">\n      <!-- Wrapper intentionally omitted (handled by section wrapper) -->\n      <!-- Two Columns -->\n      <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"module-pad\" style=\"width:100%;margin:0;padding:25px;\">\n        <tr>\n          <!-- Left: Image -->\n          <td class=\"stack-cols\" width=\"50%\" valign=\"top\" style=\"padding:0px 12px 0px 0px;\">\n            <a href=\"{{cta}}\" target=\"_blank\" style=\"text-decoration:none;\">\n              <img src=\"{{image}}\" alt=\"{{title}}\" style=\"display:block;width:100%;height:auto;border:0;outline:0;text-decoration:none;-ms-interpolation-mode:bicubic;\">\n            </a>\n          </td>\n          <!-- Right: Copy -->\n          <td class=\"stack-cols\" width=\"50%\" valign=\"top\" style=\"padding:0px 0px 0px 12px;\">\n            <!-- Title -->\n            <h2 style=\"margin:0 0 10px 0;font-family:Montserrat,Arial,Helvetica,sans-serif;font-size:26px;line-height:1.2;color:#111111;font-weight:300;\">\n              {{title}}\n            </h2>\n            <!-- Price (supports original price via priceHtml) -->\n            <p style=\"margin:0 0 10px 0;font-family:Montserrat,Arial,Helvetica,sans-serif;font-size:16px;line-height:1;color:#111111;font-weight:600;\">\n              {{priceHtml}}\n            </p>\n            <!-- Description -->\n            <p style=\"margin:0 0 16px 0;font-family:Montserrat,Arial,Helvetica,sans-serif;font-size:14px;line-height:1.6;color:#333333;\">\n              {{description}}\n            </p>\n            <!-- CTA row -->\n            <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin:0;padding:0;\">\n              <tr>\n                <td align=\"left\" valign=\"middle\" style=\"padding:0;\">\n                  <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin:0;padding:0;\" class=\"cta\">\n                    <tr>\n                      <td align=\"center\" bgcolor=\"{{ctaBg}}\" style=\"background:{{ctaBg}};\">\n                        <a href=\"{{cta}}\" target=\"_blank\" style=\"display:inline-block;padding:12px 22px;font-family:Montserrat,Arial,Helvetica,sans-serif;font-size:14px;line-height:14px;color:#ffffff;text-decoration:none;\">\n                          {{ctaLabel}}\n                        </a>\n                      </td>\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n            </table>\n            <!-- /CTA row -->\n          </td>\n        </tr>\n      </table>\n      <!-- /Two Columns -->\n    </td>\n  </tr>\n</table>\n<!-- === End: Product Feature Module === -->\n<style>\n@media only screen and (max-width: 600px) {\n  .stack-cols { display:block !important; width:100% !important; padding:0 0 16px 0 !important; }\n  .module-pad { padding:12px !important; }\n  .cta { width:100% !important; }\n}\n</style>`\n    },\n    {\n        id: \"grid\",\n        name: \"Grid\",\n        // Grid template: displays only product images in a responsive grid, no titles or descriptions.\n        html: `<!-- === Start: Product Grid Module === -->\n<table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" align=\"center\" style=\"margin:0;padding:0;\">\n  <tr>\n    <td align=\"center\" style=\"margin:0;padding:0;\">\n      <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"max-width:600px;margin:0 auto;background:#FFFFFF;\">\n        <tr>\n          <td style=\"padding:0px;\">\n            <!-- Product Images Grid -->\n            <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width:100%;margin:0;padding:0;\">\n              <tr>\n                {{#each images}}\n                <td align=\"center\" valign=\"top\" style=\"padding:0px;\">\n                  <img src=\"{{.}}\" alt=\"Product image\" style=\"display:block;width:100%;height:auto;border:0;outline:0;text-decoration:none;-ms-interpolation-mode:bicubic;\">\n                </td>\n                {{/each}}\n              </tr>\n            </table>\n            <!-- /Product Images Grid -->\n          </td>\n        </tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- === End: Product Grid Module === -->\n<style>\n@media only screen and (max-width: 600px) {\n  .product-grid-img {\n    width: 80px !important;\n    padding: 4px !important;\n  }\n}\n</style>`\n    },\n    {\n        id: \"product-copy-left-image-right\",\n        name: \"Copy left / Image right\",\n        // Swapped layout: copy appears on the left and image on the right. This\n        // variant matches the new design and removes the pretitle. The\n        // placeholder {{priceHtml}} should contain the formatted price with\n        // any original price included.\n        html: `<!-- === Start: Product Feature Module (Copy Left / Image Right) === -->\n<table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" align=\"center\" style=\"margin:0;padding:0;\">\n  <tr>\n    <td align=\"center\" style=\"margin:0;padding:0;\">\n      <!-- Wrapper intentionally omitted (handled by section wrapper) -->\n      <!-- Two Columns (copy first, image second) -->\n      <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"module-pad\" style=\"width:100%;margin:0;padding:25px;\">\n        <tr>\n          <!-- Left: Copy -->\n          <td class=\"stack-cols\" width=\"50%\" valign=\"top\" style=\"padding:0px 12px 0px 0px;\">\n            <!-- Title -->\n            <h2 style=\"margin:0 0 10px 0;font-family:Montserrat,Arial,Helvetica,sans-serif;font-size:26px;line-height:1.2;color:#111111;font-weight:300;\">\n              {{title}}\n            </h2>\n            <!-- Price -->\n            <p style=\"margin:0 0 10px 0;font-family:Montserrat,Arial,Helvetica,sans-serif;font-size:16px;line-height:1;color:#111111;font-weight:600;\">\n              {{priceHtml}}\n            </p>\n            <!-- Description -->\n            <p style=\"margin:0 0 16px 0;font-family:Montserrat,Arial,Helvetica,sans-serif;font-size:14px;line-height:1.6;color:#333333;\">\n              {{description}}\n            </p>\n            <!-- CTA row -->\n            <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin:0;padding:0;\">\n              <tr>\n                <td align=\"left\" valign=\"middle\" style=\"padding:0;\">\n                  <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"margin:0;padding:0;\" class=\"cta\">\n                    <tr>\n                      <td align=\"center\" bgcolor=\"{{ctaBg}}\" style=\"background:{{ctaBg}};\">\n                        <a href=\"{{cta}}\" target=\"_blank\" style=\"display:inline-block;padding:12px 22px;font-family:Montserrat,Arial,Helvetica,sans-serif;font-size:14px;line-height:14px;color:#ffffff;text-decoration:none;\">\n                          {{ctaLabel}}\n                        </a>\n                      </td>\n                    </tr>\n                  </table>\n                </td>\n              </tr>\n            </table>\n            <!-- /CTA row -->\n          </td>\n          <!-- Right: Image -->\n          <td class=\"stack-cols\" width=\"50%\" valign=\"top\" style=\"padding:0px 0px 0px 12px;\">\n            <a href=\"{{cta}}\" target=\"_blank\" style=\"text-decoration:none;\">\n              <img src=\"{{image}}\" alt=\"{{title}}\" style=\"display:block;width:100%;height:auto;border:0;outline:0;text-decoration:none;-ms-interpolation-mode:bicubic;\">\n            </a>\n          </td>\n        </tr>\n      </table>\n      <!-- /Two Columns -->\n    </td>\n  </tr>\n</table>\n<!-- === End: Product Feature Module === -->\n<style>\n@media only screen and (max-width: 600px) {\n  .stack-cols { display:block !important; width:100% !important; padding:0 0 16px 0 !important; }\n  .module-pad { padding:12px !important; }\n  .cta { width:100% !important; }\n}\n</style>`\n    }\n];\n/**\n * Render a template into a concrete HTML string. Takes a template\n * definition and a product data object and substitutes each\n * placeholder. Supports arrays via the simple `{{#each colours}}` syntax.\n *\n * This is a minimal implementation deliberately kept simple. If more\n * powerful templating is required (e.g. conditionals, loops) a\n * dedicated template engine like Handlebars can be introduced. For\n * now only substitution and basic array iteration is supported.\n */ function renderTemplate(template, data) {\n    let result = template.html;\n    // Handle array blocks: {{#each colors}}...{{/each}}\n    const eachRegex = /\\{\\{#each\\s+([a-zA-Z0-9_]+)\\}}([\\s\\S]*?)\\{\\{\\/each\\}}/g;\n    result = result.replace(eachRegex, (_match, key, inner)=>{\n        const arr = Array.isArray(data[key]) ? data[key] : [];\n        return arr.map((item)=>{\n            // Replace {{.}} within the inner block with the item itself.\n            return inner.replace(/\\{\\{\\.\\}\\}/g, String(item));\n        }).join(\"\");\n    });\n    // Replace simple variables: {{title}}\n    result = result.replace(/\\{\\{\\s*([a-zA-Z0-9_]+)\\s*\\}\\}/g, (_m, key)=>{\n        const value = data[key];\n        return value !== undefined && value !== null ? String(value) : \"\";\n    });\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./data/templates.ts\n");

/***/ }),

/***/ "(api)/./lib/parser.ts":
/*!***********************!*\
  !*** ./lib/parser.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseProduct: () => (/* binding */ parseProduct)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cheerio */ \"cheerio\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__, cheerio__WEBPACK_IMPORTED_MODULE_1__]);\n([axios__WEBPACK_IMPORTED_MODULE_0__, cheerio__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n/**\n * Shape of the information we care about from a product page.\n *\n * These fields mirror the placeholders used in templates. Some\n * fields are optional because not every page will expose them.\n */ // ProductData type moved to lib/types.ts\n/**\n * Attempt to parse structured JSON-LD data from the page. Many\n * e‑commerce platforms embed an object with the schema.org\n * Product type. This helper extracts it if present.\n */ function parseLdJson($) {\n    const scripts = $('script[type=\"application/ld+json\"]').toArray();\n    for (const el of scripts){\n        const contents = $(el).contents().text();\n        if (!contents) continue;\n        try {\n            const json = JSON.parse(contents.trim());\n            // Sometimes multiple objects are wrapped in an array.\n            const candidates = Array.isArray(json) ? json : [\n                json\n            ];\n            for (const obj of candidates){\n                if (obj[\"@type\"] === \"Product\") {\n                    return obj;\n                }\n            }\n        } catch (_) {\n        // ignore JSON parse errors and continue.\n        }\n    }\n    return null;\n}\n/**\n * Generic helper to extract a meta tag value. It first tries to\n * match the given property on the `meta[property]` attribute (as used\n * by Open Graph), then falls back to `meta[name]`.\n */ function getMeta($, prop) {\n    return $(`meta[property='${prop}']`).attr(\"content\") || $(`meta[name='${prop}']`).attr(\"content\") || null;\n}\n/**\n * Fetch a product page and extract basic fields using heuristics. This\n * function does not attempt to deeply crawl the DOM; instead it relies\n * on Open Graph tags, JSON‑LD and common microdata attributes. If a\n * field cannot be resolved it will be returned as an empty string.\n *\n * If the request fails for whatever reason the resulting object will\n * contain empty strings for all properties except url and cta.\n *\n * @param url Product page URL\n */ // Rotating modern user agents for retry strategy\nconst USER_AGENTS = [\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36\",\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36\",\n    \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36\"\n];\nasync function fetchWithRetries(url, max = 3) {\n    let lastErr;\n    for(let attempt = 1; attempt <= max; attempt++){\n        const ua = USER_AGENTS[(attempt - 1) % USER_AGENTS.length];\n        try {\n            const res = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url, {\n                headers: {\n                    \"User-Agent\": ua,\n                    \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\",\n                    \"Accept-Language\": \"en-US,en;q=0.9\",\n                    \"Cache-Control\": \"no-cache\",\n                    \"Pragma\": \"no-cache\",\n                    \"Referer\": new URL(url).origin + \"/\"\n                },\n                maxRedirects: 5,\n                timeout: 12000,\n                validateStatus: (s)=>s < 500 || s === 503 || s === 429\n            });\n            if (res.status === 200) return {\n                html: res.data,\n                status: res.status\n            };\n            if ([\n                429,\n                403,\n                503\n            ].includes(res.status) && attempt < max) {\n                await new Promise((r)=>setTimeout(r, 350 * Math.pow(2, attempt - 1)));\n                continue;\n            }\n            return {\n                html: res.data,\n                status: res.status\n            };\n        } catch (e) {\n            lastErr = e;\n            if (attempt === max) throw e;\n            await new Promise((r)=>setTimeout(r, 350 * Math.pow(2, attempt - 1)));\n        }\n    }\n    throw lastErr;\n}\nasync function parseProduct(url) {\n    const clean = (value)=>(value || \"\").toString().trim();\n    // Normalise image URLs (protocol-relative, root-relative, and relative paths)\n    const buildNormaliser = (pageUrl)=>{\n        let origin = \"\";\n        let basePath = \"\";\n        try {\n            const u = new URL(pageUrl);\n            origin = u.origin;\n            basePath = pageUrl.endsWith(\"/\") ? pageUrl : pageUrl.substring(0, pageUrl.lastIndexOf(\"/\") + 1);\n        } catch (_) {}\n        return (raw)=>{\n            const val = (raw || \"\").trim();\n            if (!val) return \"\";\n            if (/^https?:\\/\\//i.test(val)) return val;\n            if (val.startsWith(\"//\")) return `https:${val}`; // assume https for protocol-relative\n            if (val.startsWith(\"/\")) return origin ? origin + val : val; // root-relative\n            return basePath ? basePath + val : val; // relative path\n        };\n    };\n    const normalise = buildNormaliser(url);\n    let html = \"\";\n    let status = 0;\n    try {\n        const fetched = await fetchWithRetries(url, 3);\n        html = fetched.html;\n        status = fetched.status;\n    } catch (error) {\n        console.error(`Failed to fetch ${url}:`, error instanceof Error ? error.message : error);\n        return {\n            url,\n            pretitle: \"\",\n            title: \"\",\n            price: \"\",\n            description: \"\",\n            image: \"\",\n            images: undefined,\n            cta: url,\n            ctaLabel: \"SHOP NOW\",\n            __fetchStatus: status || 0,\n            __reason: \"fetch-failed\"\n        };\n    }\n    const $ = cheerio__WEBPACK_IMPORTED_MODULE_1__.load(html);\n    // Remove any mega-menu content to avoid polluting extraction\n    try {\n        const reMega = /mega[-_ ]?menu/i;\n        const toRemove = $(\"[class]\").filter((_, el)=>reMega.test($(el).attr(\"class\") || \"\")).toArray();\n        if (toRemove.length) $(toRemove).remove();\n    } catch (_) {}\n    // Attempt to parse JSON‑LD structured data first because it typically\n    // provides the richest information. We fall back to meta tags if\n    // structured data is not present or incomplete.\n    const ld = parseLdJson($) || {};\n    const product = {\n        url,\n        pretitle: \"\",\n        title: \"\",\n        price: \"\",\n        originalPrice: undefined,\n        description: \"\",\n        metadataDescription: undefined,\n        image: \"\",\n        images: undefined,\n        cta: url,\n        // Default call-to-action label. Users can override this in the\n        // preview by editing the CTA text. If not provided, templates\n        // will fall back to this value.\n        ctaLabel: \"SHOP NOW\"\n    };\n    product.__fetchStatus = status;\n    // Title\n    product.title = clean(ld.name) || clean(getMeta($, \"og:title\")) || clean(getMeta($, \"twitter:title\")) || clean($(\"title\").first().text());\n    // Description & metadata description\n    // We distinguish the page's canonical META description (<meta name=\"description\">)\n    // from other potential sources like JSON-LD Product.description or Open Graph / Twitter\n    // descriptions. Per requirement: metadataDescription must originate from the meta tag only.\n    const metaTagDescription = clean(getMeta($, \"description\"));\n    const ldDesc = clean(ld.description);\n    const ogDesc = clean(getMeta($, \"og:description\"));\n    const twitterDesc = clean(getMeta($, \"twitter:description\"));\n    // Assign only the literal <meta name=\"description\"> content to metadataDescription\n    product.metadataDescription = metaTagDescription || undefined;\n    if (metaTagDescription) {\n        product.originalMetadataDescription = metaTagDescription;\n    }\n    // Default user-facing description prefers the meta tag, then structured data, then OG/Twitter.\n    product.description = metaTagDescription || ldDesc || ogDesc || twitterDesc || \"\";\n    // Extract specific description sources from .product__description\n    try {\n        const descRoot = $(\".product__description\").first();\n        if (descRoot && descRoot.length) {\n            const p = descRoot.find(\"p\").first();\n            if (p && p.length) {\n                product.descriptionP = clean(p.text());\n            }\n            const ul = descRoot.find(\"ul\").first();\n            if (ul && ul.length) {\n                // Preserve UL structure as HTML for email preview/template\n                product.descriptionUl = $.html(ul);\n            }\n        }\n    } catch (e) {\n    // ignore extraction errors\n    }\n    // Image\n    const ldImage = Array.isArray(ld.image) ? ld.image[0] : typeof ld.image === \"string\" ? ld.image : undefined;\n    // Collect possible image candidates including lazy attrs & srcset\n    const firstImg = $(\"img\").first();\n    const srcset = firstImg.attr(\"srcset\");\n    let srcsetPick = \"\";\n    if (srcset) {\n        try {\n            // choose largest descriptor\n            const parts = srcset.split(\",\").map((p)=>p.trim());\n            let bestW = -1;\n            for (const part of parts){\n                const m = part.match(/\\s+(\\d+)[wx]$/);\n                const urlPart = part.replace(/\\s+(\\d+)[wx]$/, \"\").trim();\n                const w = m ? parseInt(m[1], 10) : 0;\n                if (w > bestW) {\n                    bestW = w;\n                    srcsetPick = urlPart;\n                }\n            }\n        } catch  {}\n    }\n    product.image = normalise(clean(ldImage) || clean(getMeta($, \"og:image:secure_url\")) || clean(getMeta($, \"og:image\")) || clean(getMeta($, \"twitter:image\")) || clean(firstImg.attr(\"data-src\")) || clean(firstImg.attr(\"data-lazy\")) || clean(srcsetPick) || clean(firstImg.attr(\"src\")));\n    // Price\n    const ldOffers = ld.offers;\n    let ldPrice;\n    if (ldOffers) {\n        if (Array.isArray(ldOffers)) {\n            ldPrice = ldOffers[0]?.price;\n        } else if (typeof ldOffers === \"object\") {\n            ldPrice = ldOffers.price;\n        }\n    }\n    product.price = clean(ldPrice) || clean(getMeta($, \"product:price:amount\")) || clean(getMeta($, \"og:price:amount\")) || // Try to match microdata on sites like Shopify: [itemprop=\"price\"]\n    clean($('[itemprop=\"price\"]').first().text());\n    // Original price: attempt to find a compare‑at or strike‑through price. This\n    // can appear in JSON‑LD as an \"priceSpecification\" with\n    // \"priceCurrency\" and \"value\", or in the DOM as <del> or a span with\n    // class containing \"compare\" or \"strike\". We attempt several heuristics\n    // and take the first numeric value we find. The value returned does\n    // not include the currency symbol.\n    let original;\n    // Check JSON‑LD offers.comparePrice if present\n    if (ldOffers) {\n        // Some schemas nest compareAtPrice or originalPrice\n        const getCompare = (obj)=>{\n            if (!obj) return undefined;\n            return obj.compareAtPrice || obj.originalPrice || obj.priceSpecification?.price;\n        };\n        if (Array.isArray(ldOffers)) {\n            for (const off of ldOffers){\n                const val = getCompare(off);\n                if (val) {\n                    original = clean(val);\n                    break;\n                }\n            }\n        } else if (typeof ldOffers === \"object\") {\n            const val = getCompare(ldOffers);\n            if (val) {\n                original = clean(val);\n            }\n        }\n    }\n    if (!original) {\n        // Look for elements containing a price with a line‑through style or a\n        // class indicating \"compare\" or \"original\". We extract numeric\n        // values (digits and decimal separators).\n        const priceRegex = /([\\d,.]+)\\s*(?:[A-Z]{3})?/;\n        // helper to parse text\n        const parsePriceText = (text)=>{\n            const match = priceRegex.exec(text);\n            return match ? match[1] : undefined;\n        };\n        // Check <del> elements\n        $(\"del, strike\").each((_, el)=>{\n            const text = $(el).text();\n            const val = parsePriceText(text);\n            if (val) {\n                original = clean(val);\n                return false; // break the loop\n            }\n        });\n        // Check elements with class containing compare or original\n        if (!original) {\n            $('[class*=\"compare\"],[class*=\"original\"],[class*=\"strike\"]').each((_, el)=>{\n                const text = $(el).text();\n                const val = parsePriceText(text);\n                if (val) {\n                    original = clean(val);\n                    return false;\n                }\n            });\n        }\n    }\n    // Assign originalPrice if found and different from sale price\n    if (original && original !== product.price) {\n        product.originalPrice = original;\n    }\n    // Pretitle: not widely available. As a heuristic, if the title\n    // contains a hyphen, split the first part as pretitle and the rest\n    // as the actual title.\n    if (product.title && product.title.includes(\" – \")) {\n        const parts = product.title.split(/\\s+–\\s+/);\n        if (parts.length > 1) {\n            product.pretitle = parts[0];\n            product.title = parts.slice(1).join(\" – \");\n        }\n    }\n    // Colour capture removed per refactor; no swatch detection\n    // Images: collect additional image URLs beyond the primary image. We\n    // start with the primary image if it exists. Then search for image\n    // elements that are likely part of the product gallery. Heuristics\n    // include class names containing \"product\", \"gallery\", \"thumb\", or\n    // \"image\". We also accept JSON‑LD image arrays. Only absolute\n    // URLs (http or https) are kept and duplicates removed.\n    const imageSet = new Set();\n    if (product.image) {\n        imageSet.add(product.image);\n    }\n    // Add any additional images from JSON‑LD\n    if (Array.isArray(ld.image)) {\n        for (const img of ld.image){\n            if (typeof img === \"string\") {\n                imageSet.add(normalise(img));\n            }\n        }\n    }\n    // DOM extraction: find images with relevant class hints\n    $(\"img\").each((_, el)=>{\n        const src = normalise($(el).attr(\"src\"));\n        if (!src) return;\n        if (!/\\.(jpe?g|png|gif|webp|avif|svg)(?:[?#].*)?$/i.test(src)) return;\n        // Accept images if they contain certain keywords in their class or id\n        const classes = ($(el).attr(\"class\") || \"\") + \" \" + ($(el).parent().attr(\"class\") || \"\");\n        const ids = ($(el).attr(\"id\") || \"\") + \" \" + ($(el).parent().attr(\"id\") || \"\");\n        const hay = classes + \" \" + ids;\n        if (/product|gallery|thumb|image|slider|carousel/i.test(hay)) {\n            imageSet.add(src);\n        }\n    });\n    // Additional extraction: attempt to fetch the Shopify .js endpoint for\n    // richer product data. Many Shopify stores expose a JSON file at\n    // <product-url>.js which contains an array of image URLs and the\n    // featured image. If the request fails or the response is not JSON,\n    // we silently ignore it. We prefix protocol-relative URLs with\n    // https: to ensure absolute paths. Any images found here are added\n    // to imageSet. This logic mirrors the working implementation from\n    // the provided reference package. It avoids slicing the JSON by\n    // braces and instead lets JSON.parse handle the string.\n    try {\n        const jsUrl = url.endsWith(\".js\") ? url : `${url}.js`;\n        const jsResp = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(jsUrl, {\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0 Safari/537.36\"\n            },\n            maxRedirects: 3\n        });\n        const jsData = jsResp.data;\n        // If response is a string, attempt to parse JSON; if it's already\n        // an object we can process it directly. Some platforms escape\n        // unicode sequences, but JSON.parse will handle them.\n        const parsedData = typeof jsData === \"string\" ? JSON.parse(jsData) : typeof jsData === \"object\" ? jsData : null;\n        if (parsedData && typeof parsedData === \"object\") {\n            // Extract images array\n            const imgs = parsedData.images;\n            if (Array.isArray(imgs)) {\n                for (const p of imgs){\n                    if (typeof p === \"string\" && p) {\n                        const imgUrl = normalise(p.startsWith(\"//\") ? `https:${p}` : p);\n                        if (imgUrl) {\n                            imageSet.add(imgUrl);\n                        }\n                    }\n                }\n            }\n            // Extract featured image\n            const feat = parsedData.featured_image;\n            if (typeof feat === \"string\" && feat) {\n                const full = normalise(feat.startsWith(\"//\") ? `https:${feat}` : feat);\n                if (full) {\n                    imageSet.add(full);\n                }\n            }\n        }\n    } catch (err) {\n    // Silently ignore errors; the JSON endpoint may not exist or may not\n    // return valid JSON. In such cases we simply rely on images\n    // extracted from the HTML and JSON-LD.\n    }\n    // Assign images array if more than one image is found\n    const imagesArr = Array.from(imageSet);\n    if (imagesArr.length > 0) {\n        // Assign the images directly from imageSet. The imageSet itself\n        // already deduplicates exact URLs while preserving insertion order.\n        // We no longer deduplicate by base path (query parameters) because\n        // some stores use the same base for different images. Instead we\n        // preserve all unique URLs. We still move the primary image to\n        // the front of the array if it exists and is not already first.\n        let deduped = imagesArr;\n        if (product.image) {\n            const index = deduped.findIndex((i)=>i === product.image);\n            if (index > 0) {\n                const [img] = deduped.splice(index, 1);\n                deduped.unshift(img);\n            } else if (index === -1) {\n                deduped.unshift(product.image);\n            }\n        }\n        product.images = deduped;\n    }\n    // If we failed structured extraction, attempt embedded script datasets (Next.js / Nuxt / etc.)\n    try {\n        if (!product.title) {\n            const nextMatch = html.match(/__NEXT_DATA__\\s*=\\s*(\\{[\\s\\S]*?\\})\\s*<\\/script>/);\n            if (nextMatch) {\n                try {\n                    const obj = JSON.parse(nextMatch[1]);\n                    const str = JSON.stringify(obj);\n                    // naive find of product title keys\n                    const titleMatch = str.match(/\"title\"\\s*:\\s*\"([^\"]{5,})\"/);\n                    if (titleMatch) product.title = clean(titleMatch[1]);\n                } catch  {}\n            }\n        }\n    } catch  {}\n    // Mark reason if nothing meaningful\n    const meaningfulKeys = [\n        \"title\",\n        \"description\",\n        \"image\",\n        \"price\",\n        \"originalPrice\",\n        \"images\",\n        \"pretitle\"\n    ];\n    const hasInfo = meaningfulKeys.some((k)=>{\n        const v = product[k];\n        return Array.isArray(v) ? v.length > 0 : Boolean(v && String(v).trim());\n    });\n    if (!hasInfo) {\n        product.__reason = product.__reason || (product.__fetchStatus && [\n            403,\n            429\n        ].includes(product.__fetchStatus) ? \"blocked\" : \"empty\");\n    }\n    return product;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/parser.ts\n");

/***/ }),

/***/ "(api)/./pages/api/generate.ts":
/*!*******************************!*\
  !*** ./pages/api/generate.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/parser */ \"(api)/./lib/parser.ts\");\n/* harmony import */ var _data_templates__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data/templates */ \"(api)/./data/templates.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_parser__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_parser__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        res.setHeader(\"Allow\", [\n            \"POST\"\n        ]);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n        return;\n    }\n    let body;\n    try {\n        body = typeof req.body === \"string\" ? JSON.parse(req.body) : req.body;\n    } catch (error) {\n        res.status(400).json({\n            error: \"Invalid JSON body\"\n        });\n        return;\n    }\n    const urls = Array.isArray(body.urls) ? body.urls : [];\n    if (urls.length === 0) {\n        res.status(400).json({\n            error: \"No URLs provided\"\n        });\n        return;\n    }\n    const template = _data_templates__WEBPACK_IMPORTED_MODULE_1__.defaultTemplates.find((t)=>t.id === body.templateId) || _data_templates__WEBPACK_IMPORTED_MODULE_1__.defaultTemplates[0];\n    const products = [];\n    const skipped = [];\n    const htmlFragments = [];\n    for (const url of urls){\n        try {\n            const data = await (0,_lib_parser__WEBPACK_IMPORTED_MODULE_0__.parseProduct)(url);\n            // Skip URLs that return no meaningful product information to avoid\n            // rendering placeholder values like \"Product title\" or \"Price\".\n            // Only consider fields that represent real product information.\n            // Exclude generic fields like url or cta which are always present\n            // even when parsing fails.\n            const meaningfulKeys = [\n                \"pretitle\",\n                \"title\",\n                \"price\",\n                \"description\",\n                \"image\",\n                \"originalPrice\",\n                \"images\"\n            ];\n            const hasInfo = meaningfulKeys.some((key)=>{\n                const value = data[key];\n                return Array.isArray(value) ? value.length > 0 : Boolean(value && String(value).trim());\n            });\n            const strongTitle = (data.title || \"\").trim().length > 5;\n            if (!hasInfo && !strongTitle) {\n                console.warn(\"Skipping URL with no product data:\", url);\n                skipped.push({\n                    url,\n                    reason: data.__reason || \"no-meaningful-fields\"\n                });\n                continue;\n            }\n            // Include a sanitized source URL (strip query params) so the client can map results back\n            const sourceUrl = url.split(\"?\")[0];\n            products.push({\n                ...data,\n                _sourceUrl: sourceUrl\n            });\n            const fragment = (0,_data_templates__WEBPACK_IMPORTED_MODULE_1__.renderTemplate)(template, data);\n            htmlFragments.push(fragment);\n        } catch (err) {\n            console.error(\"Error generating module for url\", url, err);\n            // If a URL fails outright, skip it and continue with the next one.\n            skipped.push({\n                url,\n                reason: \"exception\"\n            });\n        }\n    }\n    const html = htmlFragments.join(\"\\n\\n\");\n    res.status(200).json({\n        html,\n        products,\n        skipped\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ2VuZXJhdGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ2dEO0FBQ3dCO0FBZXpELGVBQWVHLFFBQzVCQyxHQUFtQixFQUNuQkMsR0FBb0I7SUFFcEIsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDekJELElBQUlFLFNBQVMsQ0FBQyxTQUFTO1lBQUM7U0FBTztRQUMvQkYsSUFBSUcsTUFBTSxDQUFDLEtBQUtDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRUwsSUFBSUUsTUFBTSxDQUFDLFlBQVksQ0FBQztRQUN0RDtJQUNGO0lBRUEsSUFBSUk7SUFDSixJQUFJO1FBQ0ZBLE9BQU8sT0FBT04sSUFBSU0sSUFBSSxLQUFLLFdBQVdDLEtBQUtDLEtBQUssQ0FBQ1IsSUFBSU0sSUFBSSxJQUFJTixJQUFJTSxJQUFJO0lBQ3ZFLEVBQUUsT0FBT0csT0FBTztRQUNkUixJQUFJRyxNQUFNLENBQUMsS0FBS00sSUFBSSxDQUFDO1lBQUVELE9BQU87UUFBb0I7UUFDbEQ7SUFDRjtJQUVBLE1BQU1FLE9BQU9DLE1BQU1DLE9BQU8sQ0FBQ1AsS0FBS0ssSUFBSSxJQUFJTCxLQUFLSyxJQUFJLEdBQUcsRUFBRTtJQUN0RCxJQUFJQSxLQUFLRyxNQUFNLEtBQUssR0FBRztRQUNyQmIsSUFBSUcsTUFBTSxDQUFDLEtBQUtNLElBQUksQ0FBQztZQUFFRCxPQUFPO1FBQW1CO1FBQ2pEO0lBQ0Y7SUFDQSxNQUFNTSxXQUNKbEIsNkRBQWdCQSxDQUFDbUIsSUFBSSxDQUFDLENBQUNDLElBQU1BLEVBQUVDLEVBQUUsS0FBS1osS0FBS2EsVUFBVSxLQUFLdEIsNkRBQWdCLENBQUMsRUFBRTtJQUUvRSxNQUFNdUIsV0FBa0IsRUFBRTtJQUMxQixNQUFNQyxVQUE2QyxFQUFFO0lBQ3JELE1BQU1DLGdCQUEwQixFQUFFO0lBQ2xDLEtBQUssTUFBTUMsT0FBT1osS0FBTTtRQUN0QixJQUFJO1lBQ0YsTUFBTWEsT0FBTyxNQUFNNUIseURBQVlBLENBQUMyQjtZQUNoQyxtRUFBbUU7WUFDbkUsZ0VBQWdFO1lBQ2hFLGdFQUFnRTtZQUNoRSxrRUFBa0U7WUFDbEUsMkJBQTJCO1lBQzNCLE1BQU1FLGlCQUFpQjtnQkFBQztnQkFBVztnQkFBUTtnQkFBUTtnQkFBYztnQkFBUTtnQkFBZ0I7YUFBUztZQUNsRyxNQUFNQyxVQUFVRCxlQUFlRSxJQUFJLENBQUNDLENBQUFBO2dCQUNsQyxNQUFNQyxRQUFRLElBQWEsQ0FBQ0QsSUFBSTtnQkFDaEMsT0FBT2hCLE1BQU1DLE9BQU8sQ0FBQ2dCLFNBQVNBLE1BQU1mLE1BQU0sR0FBRyxJQUFJZ0IsUUFBUUQsU0FBU0UsT0FBT0YsT0FBT0csSUFBSTtZQUN0RjtZQUNBLE1BQU1DLGNBQWMsQ0FBQ1QsS0FBS1UsS0FBSyxJQUFJLEVBQUMsRUFBR0YsSUFBSSxHQUFHbEIsTUFBTSxHQUFHO1lBQ3ZELElBQUksQ0FBQ1ksV0FBVyxDQUFDTyxhQUFhO2dCQUM1QkUsUUFBUUMsSUFBSSxDQUFDLHNDQUFzQ2I7Z0JBQ25ERixRQUFRZ0IsSUFBSSxDQUFDO29CQUFFZDtvQkFBS2UsUUFBUSxLQUFjQyxRQUFRLElBQUk7Z0JBQXVCO2dCQUM3RTtZQUNGO1lBQ0YseUZBQXlGO1lBQ3pGLE1BQU1DLFlBQVlqQixJQUFJa0IsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ25DckIsU0FBU2lCLElBQUksQ0FBQztnQkFBRSxHQUFHYixJQUFJO2dCQUFFa0IsWUFBWUY7WUFBVTtZQUM3QyxNQUFNRyxXQUFXN0MsK0RBQWNBLENBQUNpQixVQUFVUztZQUMxQ0YsY0FBY2UsSUFBSSxDQUFDTTtRQUNyQixFQUFFLE9BQU9DLEtBQUs7WUFDWlQsUUFBUTFCLEtBQUssQ0FBQyxtQ0FBbUNjLEtBQUtxQjtZQUN0RCxtRUFBbUU7WUFDbkV2QixRQUFRZ0IsSUFBSSxDQUFDO2dCQUFFZDtnQkFBS2UsUUFBUTtZQUFZO1FBQzFDO0lBQ0Y7SUFDQSxNQUFNTyxPQUFPdkIsY0FBY3dCLElBQUksQ0FBQztJQUNoQzdDLElBQUlHLE1BQU0sQ0FBQyxLQUFLTSxJQUFJLENBQUM7UUFBRW1DO1FBQU16QjtRQUFVQztJQUFRO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWRtLWJ1aWxkZXIvLi9wYWdlcy9hcGkvZ2VuZXJhdGUudHM/MjY1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IHBhcnNlUHJvZHVjdCB9IGZyb20gJy4uLy4uL2xpYi9wYXJzZXInO1xuaW1wb3J0IHsgZGVmYXVsdFRlbXBsYXRlcywgcmVuZGVyVGVtcGxhdGUgfSBmcm9tICcuLi8uLi9kYXRhL3RlbXBsYXRlcyc7XG5cbmludGVyZmFjZSBHZW5lcmF0ZVJlcXVlc3RCb2R5IHtcbiAgLyoqXG4gICAqIExpc3Qgb2YgcHJvZHVjdCBwYWdlIFVSTHMgc3VwcGxpZWQgYnkgdGhlIGNsaWVudC4gRWFjaCBVUkxcbiAgICogc2hvdWxkIGJlIGEgZnVsbHkgcXVhbGlmaWVkIGFic29sdXRlIFVSTC5cbiAgICovXG4gIHVybHM6IHN0cmluZ1tdO1xuICAvKipcbiAgICogT3B0aW9uYWwgaWQgb2YgdGhlIHRlbXBsYXRlIHRvIHVzZS4gSWYgbm90IHByb3ZpZGVkIG9yIG5vdFxuICAgKiByZWNvZ25pc2VkIHRoZSBmaXJzdCB0ZW1wbGF0ZSBpbiBkZWZhdWx0VGVtcGxhdGVzIHdpbGwgYmUgdXNlZC5cbiAgICovXG4gIHRlbXBsYXRlSWQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoXG4gIHJlcTogTmV4dEFwaVJlcXVlc3QsXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlXG4pOiBQcm9taXNlPHZvaWQ+IHtcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgWydQT1NUJ10pO1xuICAgIHJlcy5zdGF0dXMoNDA1KS5lbmQoYE1ldGhvZCAke3JlcS5tZXRob2R9IE5vdCBBbGxvd2VkYCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbGV0IGJvZHk6IEdlbmVyYXRlUmVxdWVzdEJvZHk7XG4gIHRyeSB7XG4gICAgYm9keSA9IHR5cGVvZiByZXEuYm9keSA9PT0gJ3N0cmluZycgPyBKU09OLnBhcnNlKHJlcS5ib2R5KSA6IHJlcS5ib2R5O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdJbnZhbGlkIEpTT04gYm9keScgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgdXJscyA9IEFycmF5LmlzQXJyYXkoYm9keS51cmxzKSA/IGJvZHkudXJscyA6IFtdO1xuICBpZiAodXJscy5sZW5ndGggPT09IDApIHtcbiAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnTm8gVVJMcyBwcm92aWRlZCcgfSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IHRlbXBsYXRlID1cbiAgICBkZWZhdWx0VGVtcGxhdGVzLmZpbmQoKHQpID0+IHQuaWQgPT09IGJvZHkudGVtcGxhdGVJZCkgfHwgZGVmYXVsdFRlbXBsYXRlc1swXTtcblxuICBjb25zdCBwcm9kdWN0czogYW55W10gPSBbXTtcbiAgY29uc3Qgc2tpcHBlZDogeyB1cmw6IHN0cmluZzsgcmVhc29uOiBzdHJpbmcgfVtdID0gW107XG4gIGNvbnN0IGh0bWxGcmFnbWVudHM6IHN0cmluZ1tdID0gW107XG4gIGZvciAoY29uc3QgdXJsIG9mIHVybHMpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHBhcnNlUHJvZHVjdCh1cmwpO1xuICAgICAgLy8gU2tpcCBVUkxzIHRoYXQgcmV0dXJuIG5vIG1lYW5pbmdmdWwgcHJvZHVjdCBpbmZvcm1hdGlvbiB0byBhdm9pZFxuICAgICAgLy8gcmVuZGVyaW5nIHBsYWNlaG9sZGVyIHZhbHVlcyBsaWtlIFwiUHJvZHVjdCB0aXRsZVwiIG9yIFwiUHJpY2VcIi5cbiAgICAgIC8vIE9ubHkgY29uc2lkZXIgZmllbGRzIHRoYXQgcmVwcmVzZW50IHJlYWwgcHJvZHVjdCBpbmZvcm1hdGlvbi5cbiAgICAgIC8vIEV4Y2x1ZGUgZ2VuZXJpYyBmaWVsZHMgbGlrZSB1cmwgb3IgY3RhIHdoaWNoIGFyZSBhbHdheXMgcHJlc2VudFxuICAgICAgLy8gZXZlbiB3aGVuIHBhcnNpbmcgZmFpbHMuXG4gICAgICBjb25zdCBtZWFuaW5nZnVsS2V5cyA9IFsncHJldGl0bGUnLCd0aXRsZScsJ3ByaWNlJywnZGVzY3JpcHRpb24nLCdpbWFnZScsJ29yaWdpbmFsUHJpY2UnLCdpbWFnZXMnXTtcbiAgICAgIGNvbnN0IGhhc0luZm8gPSBtZWFuaW5nZnVsS2V5cy5zb21lKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gKGRhdGEgYXMgYW55KVtrZXldO1xuICAgICAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZS5sZW5ndGggPiAwIDogQm9vbGVhbih2YWx1ZSAmJiBTdHJpbmcodmFsdWUpLnRyaW0oKSk7XG4gICAgICB9KTtcbiAgICAgIGNvbnN0IHN0cm9uZ1RpdGxlID0gKGRhdGEudGl0bGUgfHwgJycpLnRyaW0oKS5sZW5ndGggPiA1O1xuICAgICAgaWYgKCFoYXNJbmZvICYmICFzdHJvbmdUaXRsZSkge1xuICAgICAgICBjb25zb2xlLndhcm4oJ1NraXBwaW5nIFVSTCB3aXRoIG5vIHByb2R1Y3QgZGF0YTonLCB1cmwpO1xuICAgICAgICBza2lwcGVkLnB1c2goeyB1cmwsIHJlYXNvbjogKGRhdGEgYXMgYW55KS5fX3JlYXNvbiB8fCAnbm8tbWVhbmluZ2Z1bC1maWVsZHMnIH0pO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAvLyBJbmNsdWRlIGEgc2FuaXRpemVkIHNvdXJjZSBVUkwgKHN0cmlwIHF1ZXJ5IHBhcmFtcykgc28gdGhlIGNsaWVudCBjYW4gbWFwIHJlc3VsdHMgYmFja1xuICAgIGNvbnN0IHNvdXJjZVVybCA9IHVybC5zcGxpdCgnPycpWzBdO1xuICAgIHByb2R1Y3RzLnB1c2goeyAuLi5kYXRhLCBfc291cmNlVXJsOiBzb3VyY2VVcmwgfSk7XG4gICAgICBjb25zdCBmcmFnbWVudCA9IHJlbmRlclRlbXBsYXRlKHRlbXBsYXRlLCBkYXRhKTtcbiAgICAgIGh0bWxGcmFnbWVudHMucHVzaChmcmFnbWVudCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZW5lcmF0aW5nIG1vZHVsZSBmb3IgdXJsJywgdXJsLCBlcnIpO1xuICAgICAgLy8gSWYgYSBVUkwgZmFpbHMgb3V0cmlnaHQsIHNraXAgaXQgYW5kIGNvbnRpbnVlIHdpdGggdGhlIG5leHQgb25lLlxuICAgICAgc2tpcHBlZC5wdXNoKHsgdXJsLCByZWFzb246ICdleGNlcHRpb24nIH0pO1xuICAgIH1cbiAgfVxuICBjb25zdCBodG1sID0gaHRtbEZyYWdtZW50cy5qb2luKCdcXG5cXG4nKTtcbiAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBodG1sLCBwcm9kdWN0cywgc2tpcHBlZCB9KTtcbn1cbiJdLCJuYW1lcyI6WyJwYXJzZVByb2R1Y3QiLCJkZWZhdWx0VGVtcGxhdGVzIiwicmVuZGVyVGVtcGxhdGUiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic2V0SGVhZGVyIiwic3RhdHVzIiwiZW5kIiwiYm9keSIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwianNvbiIsInVybHMiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJ0ZW1wbGF0ZSIsImZpbmQiLCJ0IiwiaWQiLCJ0ZW1wbGF0ZUlkIiwicHJvZHVjdHMiLCJza2lwcGVkIiwiaHRtbEZyYWdtZW50cyIsInVybCIsImRhdGEiLCJtZWFuaW5nZnVsS2V5cyIsImhhc0luZm8iLCJzb21lIiwia2V5IiwidmFsdWUiLCJCb29sZWFuIiwiU3RyaW5nIiwidHJpbSIsInN0cm9uZ1RpdGxlIiwidGl0bGUiLCJjb25zb2xlIiwid2FybiIsInB1c2giLCJyZWFzb24iLCJfX3JlYXNvbiIsInNvdXJjZVVybCIsInNwbGl0IiwiX3NvdXJjZVVybCIsImZyYWdtZW50IiwiZXJyIiwiaHRtbCIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/generate.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();