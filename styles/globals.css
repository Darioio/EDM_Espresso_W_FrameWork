/* Remove extra margin between bullet/numbered list items in Tiptap editors */
.MuiTiptap-RichTextField-content ul,
.MuiTiptap-RichTextField-content ol {
  margin-top: 0.2em;
  margin-bottom: 0.2em;
  padding-left: 1.5em;
}
.MuiTiptap-RichTextField-content li {
  margin-top: 0;
  margin-bottom: 0;
  padding: 0;
}
/* Prevent pre-wrapped whitespace from affecting list items */

/*
  Global style sheet for the EDM Expresso web application. The goal
  is to provide a modern, premium look with subtle shadows, rounded
  corners and smooth micro‑interactions. Colours and typography
  variables are defined on the :root selector for easy theming.
*/

:root {
  --color-bg: #f5f6fa;
  --color-surface: #ffffff;
  --color-primary: #718ec0;
  --color-primary-dark: #3f5b80;
  --color-accent: #9aabd1;
  --color-accent-dark: #8a99bf;
  --color-accent-light: #d6dee9;
  --color-text: #333333;
  /* Animation colour tokens (can be themed) */
  --color-anim-ring-strong: rgba(113,142,192,0.65);
  --color-anim-ring-medium: rgba(113,142,192,0.35);
  --color-anim-ring-soft: rgba(113,142,192,0.2);
  --color-anim-ring-pulse-strong: rgba(113,142,192,0.55);
  --color-anim-ring-pulse-mid: rgba(113,142,192,0.25);
  --color-anim-ring-pulse-soft: rgba(113,142,192,0.15);
  --radius-large: 12px;
  --radius-small: 6px;
  --shadow-light: 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-medium: 0 4px 12px rgba(0, 0, 0, 0.08);
  --gap-2: 4px;
  --pad-x: 12px; /* standard horizontal padding for toolbars/headers */
  --pad-y: 8px;  /* standard vertical padding for toolbars/headers */
  /* Central icon styling */
  --icon-color: var(--color-primary);
  --icon-color-hover: var(--color-primary-dark);
  --icon-hover-bg: rgba(0,0,0,0.06);
  /* Preview viewport sizing */
  --mobile-preview-width: 390px;
  --desktop-preview-max: 1280px;
}

/* Dark mode CSS custom properties to match MUI theme */
[data-theme="dark"] {
  --color-bg: #0b0f14;
  --color-surface: #0f141a;
  --color-primary: #8099c9; /* slight lift for dark surfaces */
  --color-primary-dark: #3f5b80;
  --color-accent: #9aabd1;
  --color-accent-dark: #8a99bf;
  --color-accent-light: #1a2230;
  --color-text: #e9edf3;
  --color-anim-ring-strong: rgba(128,153,201,0.7);
  --color-anim-ring-medium: rgba(128,153,201,0.4);
  --color-anim-ring-soft: rgba(128,153,201,0.22);
  --color-anim-ring-pulse-strong: rgba(128,153,201,0.6);
  --color-anim-ring-pulse-mid: rgba(128,153,201,0.32);
  --color-anim-ring-pulse-soft: rgba(128,153,201,0.18);
  --icon-color: #c7d3eb;
  --icon-color-hover: #ffffff;
  --icon-hover-bg: rgba(255,255,255,0.06);
}

.page-fade {
  animation: pageFadeIn 320ms ease-out both;
}

@keyframes pageFadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.landing-shell {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 48px 24px;
  background: radial-gradient(circle at 20% 20%, rgba(255,255,255,0.85), rgba(255,255,255,0.15)),
    linear-gradient(135deg, rgba(113, 142, 192, 0.12), rgba(208, 193, 224, 0.22));
  text-align: center;
}

.landing-form {
  display: flex;
  flex-direction: column;
  gap: 32px;
  align-items: center;
  width: min(640px, 100%);
}

.platform-shell {
  opacity: 0;
  transform: translateY(12px);
  transition: opacity 500ms ease, transform 500ms ease;
}

.platform-shell.platform-shell--visible {
  opacity: 1;
  transform: translateY(0);
}

.landing-copy {
  display: flex;
  flex-direction: column;
  gap: 12px;
  align-items: center;
}

.landing-title {
  margin: 0;
  font-size: clamp(24px, 4vw, 30px);
  font-weight: 700;
  color: var(--color-text);
}

.landing-subtitle {
  margin: 0;
  max-width: 48ch;
  font-size: clamp(16px, 2vw, 18px);
  color: rgba(51, 51, 51, 0.76);
}

.landing-input-stack {
  width: min(560px, 100%);
}

.landing-textfield .MuiInputBase-root {
  font-size: 1.05rem;
  color: var(--color-text);
}

.landing-textfield .MuiInputBase-input {
  text-align: center;
  padding: 14px 0 10px;
}

.landing-textfield .MuiInputBase-input::placeholder {
  color: rgba(51, 51, 51, 0.45);
  text-align: center;
}

.landing-textfield .MuiInput-underline:before {
  border-bottom: 2px solid rgba(113, 142, 192, 0.35);
}

.landing-textfield .MuiInput-underline:hover:not(.Mui-disabled):before {
  border-bottom: 2px solid rgba(113, 142, 192, 0.5);
}

.landing-textfield .MuiInput-underline:after {
  border-bottom: 2px solid var(--color-primary);
}

.landing-cta.MuiButton-root {
  padding: 14px 32px;
  border-radius: 999px;
  border: none;
  font-size: 1rem;
  font-weight: 600;
  background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-dark) 100%);
  color: #ffffff;
  cursor: pointer;
  box-shadow: 0 12px 30px rgba(113, 142, 192, 0.3);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.landing-cta.MuiButton-root:hover,
.landing-cta.MuiButton-root:focus-visible {
  transform: translateY(-1px);
  box-shadow: 0 16px 36px rgba(63, 91, 128, 0.35);
}

.landing-cta.MuiButton-root:focus-visible {
  outline: 2px solid rgba(113, 142, 192, 0.4);
  outline-offset: 4px;
}

/* Dark mode theming */
@media (prefers-color-scheme: dark) {
  :root {
    --color-bg: #12161c;
    --color-surface: #1e2530;
    --color-text: #e4e7eb;
    --color-primary: #8ea9dc;
    --color-primary-dark: #5c769f;
    --color-accent: #a6b9e2;
    --color-accent-dark: #93a8cf;
    --color-accent-light: #2a3544;
    --icon-color: var(--color-primary);
    --icon-color-hover: var(--color-primary-dark);
    --icon-hover-bg: rgba(255,255,255,0.08);
    /* Dark‑adjusted animation ring colours */
    --color-anim-ring-strong: rgba(142,169,220,0.55);
    --color-anim-ring-medium: rgba(142,169,220,0.30);
    --color-anim-ring-soft: rgba(142,169,220,0.18);
    --color-anim-ring-pulse-strong: rgba(142,169,220,0.50);
    --color-anim-ring-pulse-mid: rgba(142,169,220,0.28);
    --color-anim-ring-pulse-soft: rgba(142,169,220,0.15);
  }

  body, html {
    background-color: var(--color-bg);
    color: var(--color-text);
  }

  .landing-shell {
    background: radial-gradient(circle at 20% 20%, rgba(30,37,48,0.85), rgba(30,37,48,0.25)),
      linear-gradient(135deg, rgba(142, 169, 220, 0.16), rgba(74, 63, 102, 0.25));
  }

  .landing-subtitle {
    color: rgba(228, 231, 235, 0.72);
  }

  .landing-textfield .MuiInputBase-input {
    color: var(--color-text);
  }

  .landing-textfield .MuiInputBase-input::placeholder {
    color: rgba(228, 231, 235, 0.55);
  }

  .landing-textfield .MuiInput-underline:before {
    border-bottom-color: rgba(142, 169, 220, 0.35);
  }

  .landing-textfield .MuiInput-underline:hover:not(.Mui-disabled):before {
    border-bottom-color: rgba(142, 169, 220, 0.5);
  }

  .platform-shell {
    opacity: 1;
    transform: none;
  }

  .accordion-section.open {
    border-color: var(--color-primary);
  }

  .code-section {
    background: var(--color-surface);
    border-color: #2d3542;
  }
  .code-section-header { background: #25303d; border-bottom-color: #2d3542; }
  .code-section-header:hover { background: #2a3644; }

  .preview-bar { background: var(--color-bg); }
  .accordion-header { background: #1e2530; border-bottom-color: #2d3542; }
  .accordion-header.open { background: #25303d; }
  .accordion-header:hover { background: #25303d; }
  .notification { background: #2d3744; }
  .edit-icon { background-color: rgba(0,0,0,0.55); }
  .edit-icon:hover { background-color: rgba(0,0,0,0.7); }
}

  /* Recently added product fade/flash highlight */
  .recently-added {
    animation: productFadeIn 0.85s ease-out;
    position: relative;
  }

  /* Recently updated (field edit) subtle pulse */
  .recently-updated {
    animation: productUpdatePulse 0.6s ease-out;
  }

  /* Click ripple (no zoom/flash) */
  .product-click-ripple {
    position: relative;
    animation: productClickRipple 550ms ease-out;
  }

  @keyframes productClickRipple {
    0% { box-shadow: 0 0 0 0 var(--color-anim-ring-pulse-strong); }
    60% { box-shadow: 0 0 0 5px var(--color-anim-ring-pulse-soft); }
    100% { box-shadow: 0 0 0 0 var(--color-anim-ring-pulse-soft); }
  }

  @keyframes productUpdatePulse {
    0% { box-shadow: 0 0 0 0 var(--color-anim-ring-pulse-strong); }
    40% { box-shadow: 0 0 0 4px var(--color-anim-ring-pulse-mid); }
    80% { box-shadow: 0 0 0 2px var(--color-anim-ring-pulse-soft); }
    100% { box-shadow: 0 0 0 0 var(--color-anim-ring-pulse-soft); }
  }

  @keyframes productFadeIn {
    0% { box-shadow: 0 0 0 0 var(--color-anim-ring-strong), 0 0 0 2px var(--color-primary); transform: scale(0.985); opacity: 0; }
    35% { box-shadow: 0 0 0 4px var(--color-anim-ring-medium), 0 0 0 0 var(--color-anim-ring-soft); opacity: 1; }
    70% { box-shadow: 0 0 0 2px var(--color-anim-ring-soft); transform: scale(1.0); }
    100% { box-shadow: 0 0 0 0 var(--color-anim-ring-soft); opacity: 1; }
  }

  /* Reduced motion: remove non-essential animations */
  @media (prefers-reduced-motion: reduce) {
    .recently-added,
    .recently-updated,
  .product-click-ripple,
  .fade-in {
    animation: none !important;
    box-shadow: none !important;
    transform: none !important;
  }

  .page-fade {
    animation: none !important;
  }

  .platform-shell {
    opacity: 1 !important;
    transform: none !important;
  }
}

html, body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  background-color: var(--color-bg);
  color: var(--color-text);
  min-height: 100%;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

/* Centralised icon color + hover */
.MuiIconButton-root {
  color: var(--icon-color);
  transition: color 0.2s ease, background-color 0.2s ease;
}
.MuiIconButton-root:hover {
  color: var(--icon-color-hover);
  background-color: var(--icon-hover-bg);
}
.MuiSvgIcon-root {
  color: inherit;
}

/* Accessible focus outlines: provide a consistent, visible focus ring */
.MuiIconButton-root:focus-visible,
.MuiButton-root:focus-visible,
a:focus-visible,
.accordion-header:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 3px;
}

/*
  The page container now uses a two‑column layout: a left panel for
  editing controls (accordion sections) and a right panel for the
  live preview. The main element simply provides a wrapper with
  internal padding and centres the content. The explicit max‑width
  restriction has been removed to allow the editor to span the full
  viewport width, giving the preview ample space on larger screens.
*/
main {
  /* Content sits below fixed header; scrolling delegated to inner sections */
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  overflow: hidden;
    /* Enable container queries based on the main area's inline size */
  container-type: inline-size;
  container-name: preview;
}

/* Container for the two panels: left (accordion editor) and right (preview).
   Uses flexbox to allow flexible resizing of each column. A gap
   separates the panels for visual breathing room. The height is set
   relative to the viewport to ensure the right panel can scroll if
   content overflows. */
.page-container {
  display: flex;
  gap: var(--gap-2);
  height: 100%;
}

/* Left panel holds the accordion. It has a fixed maximum width to
   prevent the preview from becoming too narrow on large screens.
   Overflow is set to auto to allow scrolling if the content exceeds
   the available space. */
.left-panel {
  flex: 0 0 410px;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
}

/* Right panel contains the live preview and the code view. It grows
   to fill the remaining space. Overflow auto allows the preview to
   scroll independently of the left panel. */
.right-panel {
  flex: 1;
  overflow-y: auto;
  /* Enable container queries based on the preview panel's inline size */
  container-type: inline-size;
  container-name: preview;
}

/* Accordion sections encapsulate each email part (header, body,
   footer). They are bordered and slightly elevated for distinction.
   Only one section is expanded at a time. */
.accordion-section {
  background-color: var(--color-surface);
  transition: opacity 0.25s ease, outline-color 0.2s ease, box-shadow 0.2s ease;
  outline: 1px solid transparent;
  /* border-radius: var(--radius-small); */
}

/* Accordion headers are clickable and control the expansion of
   their associated content. Use flex to space the title and
   optional icons or arrows. */
.accordion-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--pad-y) var(--pad-x);
  cursor: pointer;
  font-weight: 500;
  border-bottom: 1px solid #e5e7eb;
  transition: background-color 0.2s;
}
.accordion-header:hover {
  background-color: #f9fafb;
}
.accordion-header.open {
  background-color: #f9fafb;
}
/* Dim non-open sections when any is open */
.accordion-section.open {
  opacity: 1;
  border: 1px solid var(--color-primary);
}

.accordion-list.has-open .accordion-section:not(.open) {
  opacity: 1;
}

/* Accordion content holds the controls for each section. It has
   internal padding. */
.accordion-content {
  padding: 1rem;
  /* border-bottom: 1px solid #e5e7eb; */
}

/* Template row: holds the template selector and action icons. The
   select element grows to fill available space. */
.template-row {
  display: flex;
  align-items: center;
  gap: var(--gap-2);
}
.template-select {
  flex: 0 0 70%;
  min-width: 0;
}

/* New template form container. Hidden by default; shown when the
   corresponding state is true. Includes margins and separates
   action buttons into their own row. */
.new-template-form {
  margin-top: 0.5rem;
  padding-top: 0.5rem;
  border-top: 1px solid #e5e7eb;
}
.new-template-actions {
  display: flex;
  gap: var(--gap-2);
  justify-content: flex-end;
}


/* Code block container for the code view on the right panel. It
   ensures proper padding and scrolling of long code segments. */
/* The old .code-block class is unused now; code view uses an
   accordion with .code-section elements instead. */
.code-block {
  display: none;
}

/* Code accordion styles. Each code section mirrors the styling of
   the left‑side accordion but tailored for code blocks. Sections
   are separated with a small gap and have a light border and
   rounded corners. */
.code-section {
  border: 1px solid #e5e7eb;
  border-radius: var(--radius-small);
  overflow: hidden;
  background-color: #ffffff;
}
.code-section + .code-section {
  margin-top: 0.5rem;
}
.code-section-header {
  background-color: #f9fafb;
  padding: var(--pad-y) var(--pad-x);
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
  border-bottom: 1px solid #e5e7eb;
}

/* Preview toolbar at top of right panel */
.preview-bar {
    padding: calc(var(--pad-y) * 1.7) 24px;
    background-color: var(--color-bg);
    color: var(--color-text);
    border-bottom: 1px solid rgba(0,0,0,0.08);
}
[data-theme="dark"] .preview-bar {
  border-bottom: 1px solid rgba(255,255,255,0.12);
}
/* Preview bar actions */
.preview-actions {
  display: flex;
  align-items: center;
  gap: var(--gap-2);
}

.code-section-header:hover {
  background-color: #f3f4f6;
}
.code-actions {
  display: flex;
  align-items: center;
  gap: var(--gap-2);
}
.code-section pre {
  margin: 0;
  background-color: #ffffff;
  padding: 0.5rem 1rem;
}

/*
  Responsive stacking for two-column modules scoped to the preview area.
  When the main preview container is <= 600px wide, stack columns and
  adjust supporting elements. This uses CSS Container Queries so it does
  not depend on the full viewport width.
*/
@container preview (max-width: 600px) {
  .stack-cols {
    display: block !important;
    width: 100% !important;
    padding: 0 0 16px 0 !important;
  }

  /* Ensure previewed content flows fluidly at mobile widths */
  #preview [data-preview-container="true"] img {
    max-width: 100% !important;
    height: auto !important;
  }
  #preview [data-preview-container="true"] table {
    width: 100% !important;
  }
  #preview [data-preview-container="true"] .stack-cols > * {
    width: 100% !important;
  }

  /* Ensure colour swatches remain right aligned on small screens */
  .color-swatches {
    text-align: right !important;
  }
}

/* Black overlay for the brand customisation panel. Covers the page
   with a semi‑transparent backdrop. Clicking the overlay closes
   the panel. */
.black-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 999;
  opacity: 0;
  transition: opacity 0.3s ease;
}
.black-overlay.open {
  opacity: 1;
}

/* Sliding panel for brand customisation. Initially off screen to the
   left; when open it translates into view. The panel overlays the
   left panel but remains above the black overlay. */
.brand-panel {
  position: fixed;
  top: 0;
  left: 0;
  width: 410px;
  height: 100%;
  background: #ffffff;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
  padding: 1rem;
  overflow-y: auto;
  z-index: 1000;
  transform: translateX(-100%);
  transition: all 0.3s ease;
}
.brand-panel.open {
  transform: translateX(0);
}

/* Notification container and individual notification styling. The
   notifications appear in the top right corner and fade out
   automatically after a few seconds. */
.notifications-container {
  position: fixed;
  top: 1rem;
  right: 1rem;
  z-index: 1100;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
.notification {
  background: #333333;
  color: #ffffff;
  padding: 0.5rem 1rem;
  border-radius: var(--radius-small);
  box-shadow: var(--shadow-light);
  font-size: 0.9rem;
  opacity: 0;
  animation: fadein 0.3s forwards;
}
@keyframes fadein {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Fade-in animation for page transitions */
.fade-in {
  opacity: 0;
  animation: fadein 0.9s ease-in forwards;
  animation-delay: 0.7s;
}

h1, h2, h3 {
  margin: 0 0 0.5rem 0;
}

section {
  margin-bottom: 2rem;
}

label {
  font-weight: 500;
}


/* Divider for adding new templates */
.divider {
  border-top: 1px solid #e5e7eb;
  margin-top: 1rem;
  padding-top: 1rem;
}

/* Editor tabs for header/body/footer and preview/code tab controls */
.editor-tabs, .preview-tabs {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.editor-tabs button,
.preview-tabs button {
  background-color: var(--color-surface);
  color: var(--color-text);
  border: 1px solid var(--color-primary);
  border-radius: var(--radius-small);
  padding: 0.4rem 0.8rem;
  cursor: pointer;
  transition: background-color 0.2s, color 0.2s;
}

.editor-tabs button.active,
.preview-tabs button.active {
  background-color: var(--color-primary);
  color: #ffffff;
}

.editor-tabs button:disabled,
.preview-tabs button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* ------------------------------------------------------------------ */
/* Additional global styles for the product table modules.
   These classes are derived from the original module.css and are used by
   ProductTableModule to implement the image selector overlay and edit
   icon. Defining them here avoids importing global CSS within a
   component, which Next.js prohibits. */

/* Edit icon overlay positioned on the bottom-right of an image container. */
.edit-icon {
  position: absolute;
  bottom: 8px;
  right: 8px;
  background-color: rgba(0, 0, 0, 0.5);
  color: #ffffff;
  border-radius: 50%;
  padding: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.2s;
}
.edit-icon:hover {
  background-color: rgba(0, 0, 0, 0.7);
}

/* Modal overlay for selecting an alternate image. Covers the viewport
   (or right panel when constrained via inline styles) with a semi-
   transparent backdrop. */
.image-selector-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

/* Container for image thumbnails within the selector overlay. */
.image-selector {
  background-color: #ffffff;
  padding: 1rem;
  border-radius: var(--radius-large);
  max-width: 90%;
  max-height: 80%;
  overflow-y: auto;
  display: flex;
  flex-wrap: wrap;
  gap: var(--gap-2);
  justify-content: center;
}

/* Individual thumbnail images in the selector. Maintains aspect ratio
   and provides a hover zoom effect. */
.image-selector img {
  width: 120px;
  height: 120px;
  object-fit: cover;
  border-radius: var(--radius-small);
  box-shadow: var(--shadow-light);
  cursor: pointer;
  transition: transform 0.2s;
}
.image-selector img:hover {
  transform: scale(1.05);
}

:focus-visible {
    outline: -webkit-focus-ring-color auto 0px !important;
}

.customField li p {
   margin: 0px;
}


/* (Removed duplicate viewport-based media query; behavior now handled
   by the container query above to scope responsiveness to the main
   preview area instead of the entire viewport.) */

/* Summary panel as its own container so internal layouts respond to its width */
.summary-container {
  container-type: inline-size;
  container-name: summary;
}

/* Product thumbnails grid inside Summary panel: default to 2 columns */
.summary-product-grid {
  grid-template-columns: repeat(3, 1fr);
}

/* At >= 600px Summary width, show 3 columns */
@container summary (min-width: 300px) {
  .summary-product-grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

/* At >= 720px Summary width, show 4 columns (adjust this threshold if needed) */
@container summary (min-width: 500px) {
  .summary-product-grid {
    grid-template-columns: repeat(5, 1fr);
  }
}

/* At >= 720px Summary width, show 4 columns (adjust this threshold if needed) */
@container summary (min-width: 700px) {
  .summary-product-grid {
    grid-template-columns: repeat(6, 1fr);
  }
}
